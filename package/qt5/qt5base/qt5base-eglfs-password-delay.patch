--- old/src/plugins/platforms/eglfs/qeglfsintegration.h	2015-10-13 06:35:28.000000000 +0200
+++ new/src/plugins/platforms/eglfs/qeglfsintegration.h	2016-03-12 20:45:38.849710803 +0100
@@ -49,6 +49,9 @@
     void addScreen(QPlatformScreen *screen);
     void removeScreen(QPlatformScreen *screen);
 
+    QPlatformTheme *createPlatformTheme(const QString &name) const;
+    QStringList themeNames() const;
+
     void initialize() Q_DECL_OVERRIDE;
     void destroy() Q_DECL_OVERRIDE;
 
@@ -66,6 +69,7 @@
                                                       const QSurfaceFormat &format,
                                                       QOffscreenSurface *surface) const Q_DECL_OVERRIDE;
     EGLNativeDisplayType nativeDisplay() const Q_DECL_OVERRIDE;
+    QVariant styleHint(QPlatformIntegration::StyleHint hint) const Q_DECL_OVERRIDE;
 
 private:
     bool mDisableInputHandlers;
--- old/src/plugins/platforms/eglfs/qeglfsintegration.cpp	2015-10-13 06:35:28.000000000 +0200
+++ new/src/plugins/platforms/eglfs/qeglfsintegration.cpp	2016-03-12 20:47:37.020713612 +0100
@@ -52,6 +52,8 @@
 #include <QtPlatformSupport/private/qeglpbuffer_p.h>
 #include <QtPlatformHeaders/QEGLNativeContext>
 
+#include <qpa/qplatformtheme.h>
+
 #include <EGL/egl.h>
 
 static void initResources()
@@ -63,6 +65,17 @@
 
 QT_BEGIN_NAMESPACE
 
+
+class QPlatformThemeOlinuxino: public QPlatformTheme {
+	QVariant themeHint(ThemeHint hint) const {
+		if (hint == QPlatformTheme::PasswordMaskDelay) {
+			return QVariant(int(2000));
+		}
+		return QPlatformTheme::themeHint(hint);
+	}
+};
+
+
 QEglFSIntegration::QEglFSIntegration()
 {
     mDisableInputHandlers = qEnvironmentVariableIntValue("QT_QPA_EGLFS_DISABLE_INPUT");
@@ -70,6 +83,20 @@
     initResources();
 }
 
+QPlatformTheme *QEglFSIntegration::createPlatformTheme(const QString &name) const
+{
+	Q_UNUSED(name);
+	QPlatformTheme *theme = new QPlatformThemeOlinuxino;
+	return theme;
+}
+
+QStringList QEglFSIntegration::themeNames() const
+{
+	QStringList themeNames;
+	themeNames << "default";
+	return themeNames;
+}
+
 bool QEglFSIntegration::hasCapability(QPlatformIntegration::Capability cap) const
 {
     // We assume that devices will have more and not less capabilities
@@ -171,4 +198,12 @@
     return chooser.chooseConfig();
 }
 
+QVariant QEglFSIntegration::styleHint(QPlatformIntegration::StyleHint hint) const
+{
+    if (hint == QPlatformIntegration::PasswordMaskDelay)
+        return 2000;
+
+    return QEglFSIntegration::styleHint(hint);
+}
+
 QT_END_NAMESPACE
